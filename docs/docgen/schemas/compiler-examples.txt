$ buildtest schema -n compiler-v1.0.schema.json -e 
File: /global/u1/s/siddiq90/buildtest/buildtest/buildsystem/schemas/compiler/examples/1.0/valid/examples.yml
 Valid State: True
 ________________________________________________________________________________
 version: "1.0"
 buildspecs:
   gnu_example:
     executor: local.bash
     type: compiler
     description: "gnu example with modules, and cflags example"
     module:
        - "module purge && module load gcc/4.0"
        - "module purge && module load gcc/6.0"
     build:
       name: gnu
       source: src/hello.c
       cflags: "-O1"
   intel_example:
     executor: local.bash
     type: compiler
     description: "intel example using cflags"
     module:
       -  "module purge &&  module load intel/17"
       -  "module purge &&  module load intel/18"
     build:
       name: intel
       source: src/hello.c
       cflags: "-O1"
   pgi_example:
     executor: local.bash
     type: compiler
     description: "pgi example using cxxflags, ldflags key"
     module:
       -  "module purge &&  module load pgi"
     build:
       source: src/hello.cpp
       name: pgi
       cxxflags: "-O1"
       ldflags: "-lm"
   cray_example:
     executor: local.bash
     type: compiler
     description: "cray example using fflags and cppflags"
     sbatch: ["-C knl", "-q normal", "-t 01:00"]
     build:
       name: cray
       source: src/hello.f90
       fflags: "-O1"
       cppflags: "-DFOO"
   cc_example:
     type: compiler
     description: Example by using cc to set C compiler
     executor: local.bash
     build:
       source: "src/hello.c"
       name: gnu
       cc: gcc
   fc_example:
     type: compiler
     description: Example by using fc to set Fortran compiler
     executor: local.bash
     build:
       source: "src/hello.f90"
       name: gnu
       fc: gfortran
   cxx_example:
     type: compiler
     description: Example by using cxx to set C++ compiler
     executor: local.bash
     build:
       source: "src/hello.cpp"
       name: gnu
       cxx: g++
   args_example:
     type: compiler
     description: Launcher example
     executor: local.bash
     build:
       source: "src/hello.cpp"
       name: gnu
     run:
       args: "1 2 4"
   mpi_launcher_example:
     type: compiler
     description: Launcher example
     executor: local.bash
     build:
       source: "src/hello.cpp"
       name: gnu
       cxx: mpicxx
       cxxflags: "-O3"
     run:
       launcher: mpirun -np 2
 File: /global/u1/s/siddiq90/buildtest/buildtest/buildsystem/schemas/compiler/examples/1.0/invalid/examples.yml
 Valid State: FAIL
 ________________________________________________________________________________
 version: "1.0"
 buildspecs:
   missing_type:
     executor: local.bash
     description: "type key is missing, this is a required field"
     module:
      -  "module purge &&  module load intel/17"
      -  "module purge &&  module load intel/18"
     build:
       source: src/hello.c
       name: intel
       cflags: "-O1"
   missing_build:
     executor: local.bash
     type: compiler
     description: "build key is missing, this is a required field"
     module:
      -  "module purge &&  module load intel/17"
      -  "module purge &&  module load intel/18"
   invalid_type_value:
     executor: local.bash
     type: script
     description: "invalid value for type field must be 'compiler' "
     module:
        - "module purge && module load gcc/4.0"
        - "module purge && module load gcc/6.0"
     build:
       source: src/hello.c
       name: gnu
       cflags: "-O1"
   invalid_description_value:
     executor: local.bash
     type: compiler
     description: 1
     module:
        - "module purge && module load gcc/4.0"
        - "module purge && module load gcc/6.0"
     build:
       source: src/hello.c
       name: gnu
       cflags: "-O1"
   invalid_type_module:
     executor: local.bash
     type: compiler
     description: "type for 'module' key, expecting type 'array' but received 'string' "
     module: "module purge && module load gcc/4.0"
     build:
       source: src/hello.c
       name: gnu
       cflags: "-O1"
   module_mismatch_array_items:
     executor: local.bash
     type: compiler
     description: "The module is an array of string items, this test as a mix of numbers and string"
     module:
       - 1
       - "module purge && module load intel"
     build:
       source: src/hello.c
       name: intel
       cflags: "-O1"
   missing_source_in_compiler:
     executor: local.bash
     type: compiler
     description: "missing source key in compiler object"
     module:
     - "module purge && module load gcc/4.0"
     build:
       name: gnu
       cflags: "-O1"
   missing_name_in_build:
     executor: local.bash
     type: compiler
     description: "missing name key in build object"
     module:
     - "module purge && module load gcc/4.0"
     build:
       source: src/hello.c
   name_type_mismatch:
     executor: local.bash
     type: compiler
     description: "compiler 'name' expects a string but received a list"
     module:
     - "module purge && module load gcc/4.0"
     build:
       source: src/hello.c
       name: ["gnu", "intel"]
       cflags: "-O1"
       ldflags: "-lm"
   test_additionalProperties_compiler:
     executor: local.bash
     type: compiler
     description: "test additionalProperties in compiler object. Schema does not allow for additional keys"
     module:
     - "module purge && module load gcc/4.0"
     build:
       source: src/hello.c
       foo: bar
       name: gnu
       cflags: "-O1"
       ldflags: "-lm"
   test_additionalProperties_main_schema:
     executor: local.bash
     type: compiler
     description: "test additionalProperties in main schema"
     foo: bar
     module:
     - "module purge && module load gcc/4.0"
     build:
       source: src/hello.c
       name: gnu
       cflags: "-O1"
       ldflags: "-lm"
   type_mismatch_args:
     executor: local.bash
     type: compiler
     description: "type mismatch on args key"
     module:
     - "module purge && module load gcc/4.0"
     build:
       source: src/hello.c
       name: gnu
       cflags: "-O1"
       ldflags: "-lm"
     run:
       args: 1
 ________________________________________ Validation Error ________________________________________
 Did not find 'type' key in test section: missing_type
